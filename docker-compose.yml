version: "3"

services:
  db:
    container_name: mysql
    image: mysql:5.7
    volumes:
      - "./db:/var/lib/mysql"
#    networks:
#      - backend
    ports:
    # remember that you need to also fwd the ports in the virtual machine
      - "${SQL_PORT}"
    command: ["mysqld", "--innodb_use_native_aio=0", "--character-set-server=utf8",  "--collation-server=utf8_general_ci", "--init-connect='SET NAMES UTF8;'",  "--innodb-flush-log-at-trx-commit=0"]
    # env_file:
      # - ./local.env    
    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_PASSWORD}
      - TZ=UTC
      - MYSQL_TCP_PORT=${SQL_PORT}
    expose:
      - ${SQL_PORT}
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbit
    container_name: rabbit
    ports:
      - "15672:15672"
      - "5672:5672"
    # volumes:
      # - "./rabbit:/var/lib/rabbitmq/mnesia"
    environment:
#      - RABBITMQ_ERLANG_COOKIE=${RABBIT_ERL_COOKIE}
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASS}
#  redis:
#    image: redis:alpine
#    ports:
#      - "6379"
#    networks:
#      - frontend
#    deploy:
#      replicas: 2
#      update_config:
#        parallelism: 2
#        delay: 10s
#      restart_policy:
#        condition: on-failure

#  vote:
#    image: dockersamples/examplevotingapp_vote:before
#    ports:
#      - 5000:80
#    networks:
#      - frontend
#    depends_on:
#      - redis
#    deploy:
#      replicas: 2
#      update_config:
#        parallelism: 2
#      restart_policy:
#        condition: on-failure
#
#  result:
#    image: dockersamples/examplevotingapp_result:before
#    ports:
#      - 5001:80
#    networks:
#      - backend
#    depends_on:
#      - com.team360.hms.db
#    deploy:
#      replicas: 1
#      update_config:
#        parallelism: 2
#        delay: 10s
#      restart_policy:
#        condition: on-failure
#
#  worker:
#    image: dockersamples/examplevotingapp_worker
#    networks:
#      - frontend
#      - backend
#    deploy:
#      mode: replicated
#      replicas: 1
#      labels: [APP=VOTING]
#      restart_policy:
#        condition: on-failure
#        delay: 10s
#        max_attempts: 3
#        window: 120s
#      placement:
#        constraints: [node.role == manager]
#
#  visualizer:
#    image: dockersamples/visualizer:stable
#    ports:
#      - "8080:8080"
#    stop_grace_period: 1m30s
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    deploy:
#      placement:
#        constraints: [node.role == manager]

# networks:
#   frontend:
#   backend:

#volumes:
#  com.team360.hms.db-data: